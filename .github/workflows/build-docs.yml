# Copyright (C) 2023 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials,
# and your use of them is governed by the express license under which they
# were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit
# this software or the related documents without Intel's prior written
# permission.
#
# This software and the related documents are provided as is, with no
# express or implied warranties, other than those that are expressly stated
# in the License.

# Simple workflow for deploying static content to GitHub Pages
name: Build Docs

on:
  # For testing purposes.
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          .github/scripts/setup_apt_repo_linux.sh
          sudo apt install -y doxygen intel-oneapi-mkl intel-oneapi-mkl-devel
          # See notes in `build_linux.yml` about persisting MKL environment variables.
          source /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV
          pip install \
            archspec \
            scikit-build \
            sphinx \
            breathe \
            sphinx_rtd_theme \
            sphinx-collapse

      - name: Build Wheel
        env:
          CC: clang-15
          CXX: clang++-15
        run: |
          cd ${GITHUB_WORKSPACE}/bindings/python
          python setup.py bdist_wheel --cmake-executable="cmake" --build-type=Debug -- -- -j2
          pip install ./dist/scalable_vs*.whl

      - name: Build Docs
        working-directory: ${{ runner.temp }}
        run: |
          cmake \
            -B${{ runner.temp }}/build_docs \
            "-S${GITHUB_WORKSPACE}" \
            -DSVS_BUILD_DOCS=YES
          make -C ${{ runner.temp }}/build_docs
